# 1.浮点型,复数有几种表示方法?啥是复数
	# 1.浮点型有2种表示方法
		# 1.普通方法
floatvar = 4.67
		# 2.科学表示法
print(4.67e5)   #467000.0
print(4.67e-2)  #0.0467

	# 2.复数有2种表示方法
    #    1.普通方法
complexvar = 3 + 4j
        # 2.函数表示法
print(complex(3,4))  #(3+4j)

    # 3.复数的概念
    # 如果一个数的平方是-1,那么这个数就是j,j就是虚数,复数=实数+虚数 比如  3+4j就是复数

# 2.啥是转义字符,怎么用?啥是元字符串
# 1.转义字符的概念
# 	\+字符来表示转义字符
# 2.转义字符的用法
# \n :换行
# \r\n :换行
# \t	 :缩进(水平制表符)
# \r	 :将\r后的字符串放到当前行的行首,覆盖行首的字符
# 可以将无意义的字符变得有意义
strvar = '还有诗和\n远方的田野'
print(strvar)  #这里的\n就是换行

# 可以将有意义的字符串变得无意义
strvar  = '还有诗和\'远方\'的田野'
print(strvar)  #还有诗和'远方'的田野

# 3.元字符串
# r'字符串' 原型话输出字符串
strvar = r'D:\nython32_python\tay02'
print(strvar)  #D:\nython32_python\tay02

# 3.list tuple str 特征
# ### 1.list特征: 可获取   可修改 有序   (list 元素可修改)
# ### 2.tuple特征:可获取 不可修改 有序   (tuple元素不可修改)
# ### 3.str特征:  可获取 不可修改 有序   (str  元素不可修改)

# 4.整型当中,2 8 16进制的表示方法
# 2进制  0b101  5
# 8进制	 0o71   57
# 16进制 0x3a   3*16+10=58

# 5.如何对字符串进行格式化?常用占位符?
# 常用占位符
# %s  字符串占位符(万能占位符)--推荐
# %d  整型占位符,占1位
# %2d  整型占位符,占2位,不够2位的话用空格来补,原字符靠右
# %-2d 整型占位符,占2位,不够2位的话用空格来补,原字符靠左
# %f  浮点数占位符(默认保留6位小数)
# %.2f 浮点数,保留2位小数(四舍五入)

print('%s在水里%s,罚款%.2f,做俯卧撑%d个' % ('jack','dance',500.123,599))
# jack在水里dance,罚款500.12,做俯卧撑599个

print('%s在水里%s,罚款%s,做俯卧撑%s个' % ('jack','dance',500.123,599))
# jack在水里dance,罚款500.123,做俯卧撑599个

# 6.字典和集合有什么特点
	# 1.字典
		# 无序,可修改,可获取
		#  值可以修改,键不能修改
		#  可以通过键获取到值
		#  字典的键必须是不可变类型(number-int float bool complex tuple str)
		#   字典的键不能是可变类型(list dict set)
		#   字典的值不做要求,可以是任意的值
	# 2.集合
		# 无序,不可修改,不可获取,去重
		# 本质是没有值的字典
		#  元素不可修改
		#  元素不可获取(因为无序)
		#  集合的元素必须是不可变类型(number-int float bool complex tuple str)
		#   集合的元素不能是可变类型(list dict set)

# 7.字典的键和集合的值有什么类型上的要求
	# 1.字典
		#  字典的键必须是不可变类型(number-int float bool complex tuple str)
		#   字典的键不能是可变类型(list dict set)
		#   字典的值不做要求,可以是任意的值
	# 2.集合
		#  集合的元素(值)必须是不可变类型(number-int float bool complex tuple str)
		#   集合的元素(值)不能是可变类型(list dict set)	

# 8.同一文件内的变量有什么样的缓存机制
# 1.python3.7及其以上版本
	# number(int float bool complex)
	# str
	# tuple
	# list
	# dict
	# set
	# 上述6种数据类型中,只要值相同,id就一致
	# 除了list之外,python3.7测试,list即便值相同,id也不一致

# 2.python3.6版本
	# number
	  # (int   在-5~255范围内,只要值相同,id就一致
	   # float  正浮点数范围内,只要值相同,id就一致
	   # bool  只要值相同,id就一致
	   # complex)  即便值相同,id也不一致(正虚数除外)
	# str   只要值相同,id就一致
	# tuple 空元组,id是一致的   即便值相同,id也不一致(空元祖除外)
	# list   即便值相同,id也不一致
	# dict   即便值相同,id也不一致
	# set    即便值相同,id也不一致



























