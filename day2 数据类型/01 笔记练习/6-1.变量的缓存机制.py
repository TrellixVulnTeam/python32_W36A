# ### 在同一文件中,变量的缓存机制(仅仅针对python3.6版本负责)
# 1.对于整型而言,-5~正无穷范围内的相同值,id一致  python3.6版本
# 1.对于整型而言,     整型范围内的相同值,id一致  python3.7及其以上版本
var1 = 5
var2 = 5
print(id(var1),id(var2))  #140717116646160 140717116646160

var1 = -100
var2 = -100
print(id(var1),id(var2))    # 1390074976176 1390074976176   py3.7

# 2. 对于浮点数而言,非负数范围内的相同值 id一致  python3.6版本
# 2. 对于浮点数而言,浮点数范围内的相同值 id一致  python3.7及其以上版本
var1 = 4.67
var2 = 4.67
print(id(var1),id(var2))   #2421493052040 2421493052040

var1 = -4.67
var2 = -4.67
print(id(var1),id(var2))  #2166513906456 2166513906456  py3.7

# 3.布尔值而言,值相同情况下,id一致  (py3.6和py3.7是一致的)
var1 = True
var2 = True
print(id(var1),id(var2))  #140717116127568 140717116127568

# 4.复数 在实数+虚数 这样的结构中永不相同(只有正虚数的情况例外)  python3.6版本
# 4.复数 在实数+虚数 复数范围内的相同值,id一致   			   python3.7及其以上版本
var1 = 4+ 5j
var2 = 4+ 5j
print(id(var1),id(var2))  #2488422404976 2488422404976  

var1 = 5j
var2 = 5j
print(id(var1),id(var2))  #2374628709232 2374628709232  py3.7

var1 = -5j
var2 = -5j
print(id(var1),id(var2))  #2970357699568 2970357699568   py3.7

# --> 容器类型部分
# 5.字符串 和空元组 相同的情况下,地址相同    (py3.6和py3.7是一致的)
var1 = '你'
var2 = '你'
print(id(var1),id(var2))  #2518075428016 2518075428016

var1 = ()
var2 = ()
print(id(var1),id(var2))  #2168006836296 2168006836296

# 6.列表,元组,字典,集合无论什么情况 id标识都不同(空元祖例外) python3.6版本
# 6.列表,元组,字典,集合无论什么情况 相同值,id标识就相同 python3.7及其以上版本
var1 = (1,2)
var2 = (1,2)
print(id(var1),id(var2))  #1756229100680 1756229100680  py3.7
print('==================================')

var1 = [1,2]
var2 = [1,2]
print(id(var1),id(var2))  #1530833035912 1530833035976   py3.7 (两个列表值相同,但是id不同) 特殊点



























