# 1、匹配整数或者小数（包括正数和负数）
import re
strvar = r'2.3.. 3.3 jfa .10 22 -23 -3.5 '
lst = re.findall(r'\-?\d+\.\d+|\-?\d+',strvar)
print(lst)
#['2.3', '3.3', '10', '22', '-23', '-3.5']

# 2、匹配年月日日期 格式 2018-12-31
strvar = r'2018-12-31  20180131   2018/12/31  3018-12-31  2018-22-31  2018-12-41'
strvar = r'2018-12-31'
lst = re.findall(r'\d{4}\-\d{2}\-\d{2}',strvar)
lst = re.findall(r'^[12]\d{3}\-[01]\d{1}\-[0123]\d{1}$',strvar)
print(lst)

# 3、匹配qq号 5-12位 首字符没有0
strvar = r'1234 123456  1234567888889 012345'
strvar = r'12345'
lst = re.findall(r'^[1-9]\d{4,11}$',strvar)
print(lst)  #['123456', '123456788888', '12345']
print('--------------3')

# 4、11位的电话号码
strvar = r'13501145281'
lst = re.findall(r'^1[3|5|7|8]\d{9}$',strvar)
print(lst)  #['13501145281']
print('--------------4')

# 5、长度为8-10位的用户密码 : 包含数字字母下划线
strvar = r'1350114528  145011451  13501145281  13501142'
strvar = r'13501142'
lst = re.findall(r'^\w{8,10}$',strvar)
print(lst) #
print('--------------5')

# 6、匹配验证码：4位数字字母组成的
strvar = r'12sd'
lst = re.findall(r'^[0-9a-zA-Z]{4}$',strvar)
print(lst)
print('--------------6')

# 7、匹配邮箱地址 邮箱规则 123463922@qq.com  123@abc.com.cn
# @之前必须有内容且只能是字母,数字,下划线(_),减号(-),点(.)
# @符号后面是字母,数字,减号(-),保留121@qq.com.cn 的可能
# 最后一个点(.)之后必须有内容,字母,数字且长度为大于等于2个字节,小于等于6个字节

strvar = r'123-.463922@q2-q.com000.cn'
lst = re.findall(r'[\w\-\.]+@[a-z0-9\-]+\.[a-zA-Z0-9]{2,6}(?:\.cn)?',strvar)
print(lst)
print('--------------7')

# 8、从类似
# <a>wahaha</a>
# <b>banana</b>
# <h1>qqxing</h1>
# <h1>q</h1>
# 这样的字符串中，
# 1）匹配出 wahaha，banana，qqxing 内容。
# 2）匹配出 a,b,h1这样的内容

strvar = r''' <a>wahaha</a>
 <b>banana</b>
 <h1>qqxing</h1>
 <h1>q</h1>'''
lst = re.findall(r'>([a-z]+)<',strvar)
print(lst)  #['wahaha', 'banana', 'qqxing', 'q']   #分组,()中的单独显示
print('--------------8-1')

lst = re.findall(r'<([a-z0-9]+)>',strvar)
print(lst)  #  ['a', 'b', 'h1', 'h1']  
print('--------------8-2')

# 9、'1-2*((60-30+(-40/5)*(9-2*5/3+7/3*99/4*2998+10*568/14))-(-4*3)/(16-3*2))'
# 从上面算式中匹配出最内层小括号以及小括号内的表达式

strvar = r'1-2*((60-30+(-40/5)*(9-2*5/3+7/3*99/4*2998+10*568/14))-(-4*3)/(16-3*2))'
lst = re.findall(r'\([^()]+\)',strvar)  #最外层的小括号() 必须\转义    ^只能用在[]字符组,如果不在字符组[],就是卡开头
print(lst)  #['(-40/5)', '(9-2*5/3+7/3*99/4*2998+10*568/14)', '(-4*3)', '(16-3*2)']
# 最内层的小括号的特点:(开头  )结尾  里面没有小括号

# 10正则小程序:
# """
	# 给你字符串 '1-2*((60-30+(-40/5)*(9-2*5/3+7/3*99/4*2998+10*568/14))-(-4*3)/(16-3*2))' 计算最后结果.  
# """

# 匹配
# 乘除
# 加减
# 替换
# 主函数





























