# 1预定义字符集
# 2字符组

# 1量词
# 2贪婪和非贪婪
# 3边界符
# 4 ^ $

# 1分组
# 2|
# 3 search
# group
# groups


# 1预定义字符集
.   匹配任意字符,除了\n
\d  匹配数字  d-digit
\D  匹配非数字  
\w  匹配字母 数字 下划线 中文  w-word
\W  匹配非字母 数字 下划线 中文
\s  匹配空白字符(空格 \t \n \r)   s-space
\S	匹配非空白字符
\t  匹配单个制表符
\n  匹配单个换行符

# 2字符组
[abc]  匹配其中一位
[^abc] ^在字符组,表示除了
() [] {} \ ^ - 等都需要转义
[0-9a-zA-Z]
注意点:正则表达式或者字符串 都用r.避免转移匹配不到

# 1量词
?   0或者1个
+   1或者多个
*   0或者多个
{m,n} 重复m~n次
{m,}  重复至少m次
{m}   重复m次

# 2贪婪和非贪婪
贪婪:尽可能多的匹配
非贪婪:尽可能少的匹配,匹配到了第一个,就作为列表的元素返回,接着匹配第二个,直到没有满足条件的为止  re.findall

写法:
贪婪:    .+量词
非贪婪:  .+量词+?

# 3边界符  \b  退格键back
  空格是边界
卡左边   \bw  w开头
卡右边   d\b  d结尾

# 4 ^ $
^不在[]字符组中,卡整个字符串的左边
$ 卡整个字符串的右边  
^$一起使用,严格卡位数

# 1分组  整体
()  默认只显示()里的
     要全部显示 ()里写(?:)


# 2|
ab|cd  表示或

# 3 search  遇到第一个满足条件的,就返回,不再匹配了,返回的是对象
# obj.group() : 获取匹配到的内容   多
# obj.groups(): 获取分组里面的内容  少




















































