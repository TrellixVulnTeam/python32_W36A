# (选做)
# 1.可滑动的序列 自定义一个函数 根据参数n的值 , 变成对应个元素的容器 （zip）
# """
# listvar = [1,2,3,4,5,6,7,8,9]
# n = 2
# listvar = [[1,2],[3,4],[5,6],[7,8]]
# n = 3
# listvar = [[1,2,3],[4,5,6],[7,8,9]]
# n = 4
# listvar = [[1,2,3,4],[5,6,7,8]]
# """

# 找规律
# n=2
# l21 = [1,3,5,7,9]  切片得到l21  然后zip
# l22 = [2,4,6,8]
#
# n = 3
# l31 = [1,4,7]
# l32 = [2,5,8]
# l33 = [3,6,9]
#
# n = 4
# l41 = [1,5]
# l42 = [2,6]
# l43 = [3,7]
# l44 = [4,8]

# '''
# 思路:
# 第一步:先得到--通过切片 步长是3
n = 3
l31 = [1,4,7]
l32 = [2,5,8]
l33 = [3,6,9]

# 第二步:  zip(*列表)
# [(1,2,3),(4,5,6),(7,8,9)]

# 第三步:  
# [[1,2,3],[4,5,6],[7,8,9]]

# 步骤:
# 1 先写死 n=3
# 2 再写活 n
# '''

listvar = [1,2,3,4,5,6,7,8,9]
li1 = []
li2 = []

def func(n):
	# 第一步: 先得到 - -通过切片	步长是3
	# n = 3
	# l31 = [1,4,7]
	# l32 = [2,5,8]
	# l33 = [3,6,9]
	for i in range(n):
		li1.append(listvar[i::n])  #知识点1
	print(li1)  #[[1, 4, 7], [2, 5, 8], [3, 6, 9]]

	# 第二步: zip(*列表)	[(1, 2, 3), (4, 5, 6), (7, 8, 9)]
	it = zip(*li1)   #知识点2
	# print(list(it))  #[(1, 2, 3), (4, 5, 6), (7, 8, 9)]

	# 第三步: 得到 [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
	for i in list(it):
		li2.append(list(i))
	print(li2)   #[[1, 2, 3], [4, 5, 6], [7, 8, 9]]

func(3)













