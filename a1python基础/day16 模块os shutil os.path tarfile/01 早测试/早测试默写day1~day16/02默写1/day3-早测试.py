#!/usr/bin/env python
#-*- coding:utf-8 -*-
#@time:  2020/9/14 10:08

# ''''''
# '''
# 早练习
# 1.什么是原码 反码 补码?
原码:用于显示
补码:用于存储和运算
反码:用来通过原码算补码,或者通过补码算原码


# 2.进制转换:234 -> 2 8 16    
234  ==> 二进制  0b 1110 1010
117 0
 58 1
 29 0
 14 1
  7 0
  3 1
  1 1

234  ==> 八进制  0o352
 29  2
  3  5
  
234  ==> 十六进制  0xea
 14  10 
	

# 3.进制转换:0b101001101 0o137 0xabc -> 十进制  
0b1 0100 1101   1+4+8 +64+256  =13+320=333

0o137       7+24+64=95

0xabc       12 + 11 *16 + 10 *16**2=12 +176 +2560=188+2560=2748


# 4.进制转换:0xabc 转换成八进制   #先转换成二进制  
0xabc   0b 1010 1011 1100

0b 101 010 111 100   ==> 0o5274

# 5.计算 9+(-3) 以及 -9 + (3)
9  正数 符号位 0 三码一致
原码 0 0000 1001
反码 0 0000 1001
补码 0 0000 1001

-3 负数 符号位 1 三码不一致
原码 1 0000 0011
反码 1 1111 1100 取反符号位不变
补码 1 1111 1101

补码1 0 0000 1001
补码2 1 1111 1101
补码3 0 0000 0110  符号位0 是正数  三码一致

反码  0 0000 0110
原码  0 0000 0110   6



-9  负数 符号位 1 三码不一致
原码  1 0000 1001
反码  1 1111 0110   取反符号位不变
补码  1 1111 0111 

3  正数 符号位 0 三码一致
原码 0 0000 0011
反码 0 0000 0011
补码 0 0000 0011

补码1  1 1111 0111
补码2  0 0000 0011  符号位想加运算
补码3  1 1111 1010  符号位1 是负数 三码不一致

反码   1 0000 0101  取反符号位不变
原码   1 0000 0110  -6
		

# 6.什么是注释
便于代码阅读,实际不会编译执行


# 7.注释种类
单行注释 #
多行注释 三引号


# 8.如何用注释排错?
一行一行注释,逐步缩小范围


# 9.如何定义变量?
a = 1
变化的量就是变量


# 10.变量命名
字母数字下划线,不能数字开头
严格区分大小写,不能使用关键字
变量命名有意义,不能使用中文

# 11.如何交换变量
a = 1
b = 2
a,b = b,a   #特殊

#通用 临时变量
tmp = a
a = b
b = tmp


# 12.python的6大标准数据类型
numbers
	int
	float
	bool
	complex

容器
	str
	tuple
	list
	dict
	set


# 13.浮点型和复数的两种数据类型
浮点数
3.14
3.12e5

复数
3+4j
complex(3,4)


# 14.写出三个转义字符,含义
\n 换行
\t tab制表符
\r  把\r之后的内容,放到当前行的行首,覆盖行首内容   (进度条)



# 15.简述如何使用字符串的格式化占位符?
print('%s在水里%s,罚款%.2f,俯卧撑%d个' % ('jack','dance',123.566,10))
print('{:s}在水里{:s},罚款{:f},俯卧撑{:d}个'.format('jack','dance',123.566,10))

# 16.简述容器类型各个特征
容器
	str   可获取 不可修改 有序
	tuple 可获取 不可修改 有序
	list  可获取   可修改 有序
	dict  可获取   可修改 无序
	set   不可获取(单元素) 不可修改 无序


# 17.以下各是什么类型:

	
# 18.字典的键和集合的值有什么要求?
必须是不可变类型:  Numbers(int float bool complex)  tuple str
另外,可变类型:list dict set

# 19.用几种方式获取列表中的最后一个元素
lst = [1,2,3]
lst[-1]  #推荐 简洁
lst[len(lst)-1]

# 20.3.6版本中,变量的缓存机制有哪些?
numbers
	int  -5~正无穷   值相同  id相同
	float 非负浮点数 值相同  id相同
	bool			 值相同  id相同
	complex  值相同  id不同(正虚数除外 5j)

容器
	str     值相同  id相同
	tuple   值相同  id不同(空元组除外)
	list	值相同  id不同
	dict    值相同  id不同
	set     值相同  id不同




# '''



















