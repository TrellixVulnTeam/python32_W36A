#!/usr/bin/env python
#-*- coding:utf-8 -*-
#@author: wangtongpei
#@time:  2020/9/27 8:35

''''''
'''

# 1# 什么是推导式,推导式完成1~100的列表
# 2#[1,2,3,4]=[2,8,24,64]
# 3#[1,2,3,4,5 ,6,67,7,81只要偶数
# 4#lst1 =["a","b","c"]和1st2 = ["1",2","3"]按照索引把两个列表中的元素拼接在一起存新列表
# 5#(1).{ 'x': 'A'，'Y': 'B'，'z': 'C'}把字典写成x-A，y=B，z=c的列表推导式
# 6#(2).把列表中所有字符变成小写[ ""ADDD", "dddDD","DDaa", "sss"]
# 7#(3）.x是0-5之间的偶数，y是o-5之间的奇数把x,y组成一起变成元组,放到列表当中
# 8#(4）.使用列表推导式制作所有99乘法表中的运算
# 9#(5)#求M，H中矩阵和元素的乘积
# 10#M= [ [1,2,31，
# #
# [4,5 ,61，
# #
# [7,8,9] ]
# H= [[2,2,21，
# #
# [3,3,3]，
# #
# [4,4,4]l
# #=→实现效果1[2，4,6，12，15，18，28，32，36]
# #=→实现效果2[[2，4，6]，[12，15，18]，[28，32，36]]
# 11#""I"
# 案例:
# 满足年龄在18到21，存款大于等于5000小于等于5500的人，
# 开卡格式为:尊贵VIP卡老x(姓氏)，否则开卡格式为:抠脚大汉卡老x(姓氏)
# 把并卡的种类统计出来
# r.?
# 12#enumerate和zip如何使用
# 13#定义生成器的两种方式
# 14#next和send有什么不同
# 15#生成器写斐波那契数列
'''

# 1# 什么是推导式,推导式完成1~100的列表
lst = [i for i in range(1,101)]
print(lst)

# 2#[1,2,3,4]=[2,8,24,64]
lst = [1,2,3,4]
lst2 = [ i << i for i in lst]
print(lst2)  #[2, 8, 24, 64]

# 3#[1,2,3,4,5 ,6,67,7,81]只要偶数
lst = [1,2,3,4,5 ,6,67,7,81]
lst2 = [i for i in lst if i % 2 == 0]
print(lst2)  #[2, 4, 6]

# 4#lst1 =["a","b","c"]和1st2 = ["1",2","3"]按照索引把两个列表中的元素拼接在一起存新列表   nok
lst1 =["a","b","c"]
lst2 = ["1","2","3"]
it = zip(lst1,lst2)
print(list(it))  #[('a', '1'), ('b', '2'), ('c', '3')]

# 5#(1).{ 'x': 'A'，'Y': 'B'，'z': 'C'}把字典写成x=A，y=B，z=c的列表推导式  nok
dic = { 'x': 'A','Y': 'B','z': 'C'}
lst = [k + '=' + v for k,v in dic.items()]
print(lst)  #['x=A', 'Y=B', 'z=C']

# 6#(2).把列表中所有字符变成小写[ "ADDD", "dddDD","DDaa", "sss"]
lst = [ "ADDD", "dddDD","DDaa", "sss"]
lst2 = [i.lower() for i in lst]
print(lst2)  #['addd', 'ddddd', 'ddaa', 'sss']

# 7#(3）.x是0-5之间的偶数，y是o-5之间的奇数把x,y组成一起变成元组,放到列表当中
lst = [(x,y) for x in range(6) for y in range(6) if x % 2 == 0 and y % 2 == 1]
print(lst) #[(0, 1), (0, 3), (0, 5), (2, 1), (2, 3), (2, 5), (4, 1), (4, 3), (4, 5)]
print('----------------------------------------7')

# 8#(4）.使用列表推导式制作所有99乘法表中的运算
lst = [ '{:d}*{:d}={:2d} '.format(i,j,i*j)for i in range(1,10) for j in range(1,i+1)]
print(lst)

# 9#(5)#求M，H中矩阵和元素的乘积
# 10#M= [ [1,2,31，
# #
# [4,5 ,61，
# #
# [7,8,9] ]
# H= [[2,2,21，
# #
# [3,3,3]，
# #
# [4,4,4]l
# #=→实现效果1[2,4,651，12，15，18，28，32，36]
# #=→实现效果2[[2，4，6]，[12，15，18]，[28，32，36]]

M= [ [1,2,3], [4,5,6],[7,8,9] ]
H= [[2,2,2], [3,3,3],[4,4,4]]
lst = [ M[i][j] * H[i][j] for j in range(3) for i in range(3)]  #j在前面,内循环,动的快,i在外面,外循环,动的慢
print(lst)  #[2, 4, 6, 12, 15, 183, 28, 32, 36]

lst2 = [ [M[i][j] * H[i][j] for j in range(3)] for i in range(3)]
print(lst2)

M = [ [1,2,3] ,[4,5,6] , [7,8,9] ]
N = [ [2,2,2] ,[3,3,3] , [4,4,4] ]
lst = [    [  M[i][j] * N[i][j] for j in range(3)  ]    for i in range(3)]
print(lst)
print('----------------------------------------10')

# 11#""I"
lst = [
    {"name":"赵沈阳","age":18,"money":3000},
    {"name":"赵万里","age":19,"money":5200},
    {"name":"赵蜂拥","age":20,"money":100000},
    {"name":"赵世超","age":21,"money":1000},
    {"name":"王志国","age":18,"money":5500},
    {"name":"王永飞","age":99,"money":5500}
]
# 案例:
# 满足年龄在18到21，存款大于等于5000小于等于5500的人，
# 开卡格式为:尊贵VIP卡老x(姓氏)，否则开卡格式为:抠脚大汉卡老x(姓氏)
# 把并卡的种类统计出来

















































